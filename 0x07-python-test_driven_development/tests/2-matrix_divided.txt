The ``2-matrix_divided`` Module.
================================

Using the function ``matrix_divided`` from the module above
===========================================================

Usage:
======

Importing ``matrix_divided`` function from the module

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Begin Tests.

::

Test for strings in the list:

    >>> matrix = [[1, 2, 3], "tommy", "yeah"]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

Test for size of lists in 2D list:

    >>> matrix = [[1,2,3], [4,5,6], [7,8,9,10]]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

::

Test for type of divisor passed in:

    >>> matrix = [[1,2,3], [4,5,6]]
    >>> matrix_divided(matrix, "yeah")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::

Test if divisor is 0:

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

::

Test if code runs well:

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

Test for empty 2D list:
    >>> matrix = [[]]
    >>> matrix_divided(matrix, 4)
    [[]]

::

Test for content of list:

    >>> matrix = [[1, True, "hey"], [2, 3, False]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

checking for module docstring
::
        >>> Mdocs = __import__("2-matrix_divided").__doc__
        >>> len(Mdocs) > 5
        True

checking function docstring for module
::
        >>> Fdocs = matrix_divided.__doc__
        >>> len(Fdocs) > 5
        True

checking regular functionality for ``matrix_divided``
::
        >>> matrix = [
        ... [1, 2, 3],
        ... [4, 5, 6]
        ... ] #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
        >>> matrix = [[4, 8, 12]]
        >>> matrix_divided(matrix, 2)
        [[2.0, 4.0, 6.0]]
        >>> matrix = [
        ...      [2.2, 4.4, 6.6],
        ...      [8.2, 6.2, 10]
        ... ] #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 2)
        [[1.1, 2.2, 3.3], [4.1, 3.1, 5.0]]

checking if matrix is a list of lists
::
        >>> matrix = [1, 2, 3]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
        >>> matrix = [[1, 4, 5], "School"]
        >>> matrix_divided(matrix, 1)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
        >>> matrix = [[1, [1, 2], 3], [1, 4, 5]]
        >>> matrix_divided(matrix, 1)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

checking if rows has the same size
::
        >>> matrix = [[1, 2, 3], [1, 2]]
        >>> matrix_divided(matrix, 4)
